# =============================================================================
# QR 자산관리 시스템 nginx 설정 파일
# =============================================================================
#
# 이 파일은 nginx 웹 서버의 설정을 담당합니다.
# 프론트엔드 정적 파일 서빙과 백엔드 API 프록시를 설정합니다.
#
# 주요 설정:
# - 정적 파일 서빙 (CSS, JS, 이미지 등)
# - 백엔드 API 프록시
# - MIME 타입 설정
# - 보안 헤더 설정
#
# 작성일: 2025-01-27
# =============================================================================

# 사용자 설정
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# 이벤트 설정
events {
    worker_connections 1024;
}

# HTTP 설정
http {
    # MIME 타입 설정
    types {
        text/html                             html htm shtml;
        text/css                              css;
        application/javascript                 js;
        application/json                       json;
        image/png                             png;
        image/jpeg                            jpg jpeg;
        image/gif                             gif;
        image/svg+xml                         svg svgz;
        image/x-icon                          ico;
        font/woff                             woff;
        font/woff2                            woff2;
        font/ttf                              ttf;
        application/vnd.ms-fontobject         eot;
    }

    # 기본 설정
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    
    # 로그 형식 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # 성능 최적화 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 업스트림 서버 설정
    upstream backend {
        server 127.0.0.1:4000;
    }

    upstream frontend {
        server 127.0.0.1:3000;
    }

    # HTTP 서버 설정
    server {
        listen 80;
        server_name invenone.it.kr www.invenone.it.kr;
        
        # 보안 헤더 설정
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 정적 파일 서빙 (Nuxt.js 빌드 파일)
        location /_nuxt/ {
            alias /path/to/your/frontend/.output/public/_nuxt/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # CSS 파일에 대한 특별 처리
            location ~* \.css$ {
                add_header Content-Type "text/css" always;
            }
            
            # JS 파일에 대한 특별 처리
            location ~* \.js$ {
                add_header Content-Type "application/javascript" always;
            }
        }
        
        # 루트 정적 파일
        location / {
            try_files $uri $uri/ @frontend;
        }
        
        # 프론트엔드 서버로 프록시
        location @frontend {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API 요청을 백엔드로 프록시
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS 헤더 설정
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            
            # OPTIONS 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # 헬스체크 엔드포인트
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS 서버 설정 (SSL 인증서가 있는 경우)
    server {
        listen 443 ssl http2;
        server_name invenone.it.kr www.invenone.it.kr;
        
        # SSL 인증서 설정 (실제 경로로 변경 필요)
        # ssl_certificate /path/to/your/certificate.crt;
        # ssl_certificate_key /path/to/your/private.key;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # 보안 헤더 설정
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 정적 파일 서빙 (Nuxt.js 빌드 파일)
        location /_nuxt/ {
            alias /path/to/your/frontend/.output/public/_nuxt/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # CSS 파일에 대한 특별 처리
            location ~* \.css$ {
                add_header Content-Type "text/css" always;
            }
            
            # JS 파일에 대한 특별 처리
            location ~* \.js$ {
                add_header Content-Type "application/javascript" always;
            }
        }
        
        # 루트 정적 파일
        location / {
            try_files $uri $uri/ @frontend;
        }
        
        # 프론트엔드 서버로 프록시
        location @frontend {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API 요청을 백엔드로 프록시
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS 헤더 설정
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            
            # OPTIONS 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # 헬스체크 엔드포인트
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 