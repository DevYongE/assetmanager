#!/bin/bash

# =============================================================================
# 강제 배포 스크립트
# =============================================================================
#
# 이 스크립트는 nginx 설정을 강제로 교체하고
# 애플리케이션을 완전히 재배포합니다.
# 기본 테스트 페이지 대신 실제 애플리케이션을 표시합니다.
#
# 작성일: 2025-01-27
# =============================================================================

echo "🚀 강제 배포를 시작합니다..."
echo ""

# =============================================================================
# 1. 모든 프로세스 중지
# =============================================================================
echo "⏹️ 모든 프로세스를 중지합니다..."

# PM2 프로세스 중지
pm2 delete all 2>/dev/null || true

# nginx 중지
sudo systemctl stop nginx

echo "✅ 모든 프로세스 중지 완료"

# =============================================================================
# 2. 백엔드 배포
# =============================================================================
echo "🔧 백엔드를 배포합니다..."

cd backend

# 의존성 설치
echo "📦 백엔드 의존성을 설치합니다..."
npm install

# PM2로 백엔드 시작
echo "🚀 백엔드 서버를 시작합니다..."
pm2 start index.js --name backend --watch

cd ..
echo "✅ 백엔드 배포 완료"

# =============================================================================
# 3. 프론트엔드 배포
# =============================================================================
echo "🔧 프론트엔드를 배포합니다..."

cd frontend

# 의존성 설치
echo "📦 프론트엔드 의존성을 설치합니다..."
npm install

# 프로덕션 빌드
echo "🏗️ 프론트엔드를 빌드합니다..."
npm run build

# PM2로 프론트엔드 시작
echo "🚀 프론트엔드 서버를 시작합니다..."
pm2 start npm --name frontend -- run preview

cd ..
echo "✅ 프론트엔드 배포 완료"

# =============================================================================
# 4. 파일 권한 설정
# =============================================================================
echo "🔐 파일 권한을 설정합니다..."

if [ -d "frontend/.output/public" ]; then
    sudo chown -R nginx:nginx frontend/.output/public/
    sudo chmod -R 755 frontend/.output/public/
    echo "✅ 파일 권한 설정 완료"
else
    echo "❌ 프론트엔드 빌드 파일을 찾을 수 없습니다"
    exit 1
fi

# =============================================================================
# 5. nginx 설정 강제 교체
# =============================================================================
echo "🌐 nginx 설정을 강제로 교체합니다..."

# 기존 설정 백업
sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup

# 새 설정 적용
sudo cp nginx.conf /etc/nginx/nginx.conf

# nginx 설정 테스트
echo "🔍 nginx 설정을 테스트합니다..."
if sudo nginx -t; then
    echo "✅ nginx 설정 유효"
else
    echo "❌ nginx 설정 오류"
    echo "백업에서 복원합니다..."
    sudo cp /etc/nginx/nginx.conf.backup /etc/nginx/nginx.conf
    exit 1
fi

# nginx 시작
echo "🔄 nginx를 시작합니다..."
sudo systemctl start nginx

# nginx 상태 확인
if sudo systemctl is-active --quiet nginx; then
    echo "✅ nginx 시작 완료"
else
    echo "❌ nginx 시작 실패"
    exit 1
fi

# =============================================================================
# 6. 방화벽 설정 확인
# =============================================================================
echo "🔥 방화벽 설정을 확인합니다..."

# 필요한 포트 열기
sudo ufw allow 80 2>/dev/null || true
sudo ufw allow 443 2>/dev/null || true
sudo ufw allow 3000 2>/dev/null || true
sudo ufw allow 4000 2>/dev/null || true

echo "✅ 방화벽 설정 완료"

# =============================================================================
# 7. 상태 확인
# =============================================================================
echo "📊 상태를 확인합니다..."

echo "PM2 프로세스:"
pm2 status

echo ""
echo "포트 상태:"
sudo netstat -tlnp | grep -E ':(80|443|3000|4000)'

echo ""
echo "nginx 상태:"
sudo systemctl status nginx --no-pager

# =============================================================================
# 8. 테스트
# =============================================================================
echo "🧪 연결을 테스트합니다..."

echo "HTTP 테스트:"
curl -I http://invenone.it.kr

echo ""
echo "HTTPS 테스트:"
curl -I -k https://invenone.it.kr

echo ""
echo "API 테스트:"
curl -I -k https://invenone.it.kr/api/health

# =============================================================================
# 9. 완료
# =============================================================================
echo ""
echo "🎉 강제 배포 완료!"
echo ""
echo "📋 확인 사항:"
echo "   1. 브라우저에서 https://invenone.it.kr 접속"
echo "   2. 브라우저 캐시 삭제 후 재접속 (Ctrl+F5)"
echo "   3. 개발자 도구에서 오류 확인"
echo ""
echo "🌐 접속 URL:"
echo "   웹사이트: https://invenone.it.kr"
echo "   API 서버: https://invenone.it.kr/api"
echo "   헬스체크: https://invenone.it.kr/api/health"
echo ""
echo "✅ 모든 설정이 완료되었습니다!" 