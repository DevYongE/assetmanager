#!/bin/bash

# =============================================================================
# 프론트엔드 문제 해결 스크립트
# =============================================================================
#
# 이 스크립트는 프론트엔드 문제를 해결합니다.
# 빌드, 권한 설정, 서버 재시작을 자동으로 수행합니다.
#
# 작성일: 2025-01-27
# =============================================================================

echo "🔧 프론트엔드 문제를 해결합니다..."
echo ""

# =============================================================================
# 1. 현재 상태 확인
# =============================================================================
echo "📊 현재 상태 확인:"
pm2 status

echo ""

# =============================================================================
# 2. 프론트엔드 재빌드
# =============================================================================
echo "🏗️ 프론트엔드를 재빌드합니다..."

cd frontend

# 의존성 설치
echo "📦 의존성을 설치합니다..."
npm install

# 프로덕션 빌드
echo "🏗️ 프로덕션 빌드를 실행합니다..."
npm run build

cd ..

echo "✅ 프론트엔드 빌드 완료"

# =============================================================================
# 3. 파일 권한 설정
# =============================================================================
echo "🔐 파일 권한을 설정합니다..."

if [ -d "frontend/.output/public" ]; then
    echo "nginx 사용자가 파일에 접근할 수 있도록 권한 설정..."
    sudo chown -R nginx:nginx frontend/.output/public/
    sudo chmod -R 755 frontend/.output/public/
    echo "✅ 파일 권한 설정 완료"
else
    echo "❌ 빌드 파일을 찾을 수 없습니다"
    exit 1
fi

echo ""

# =============================================================================
# 4. PM2 프론트엔드 재시작
# =============================================================================
echo "🔄 PM2 프론트엔드를 재시작합니다..."

# 기존 프로세스 중지
pm2 delete frontend 2>/dev/null || true

# 새로 시작
cd frontend
pm2 start npm --name frontend -- run preview
cd ..

echo "✅ 프론트엔드 재시작 완료"

# =============================================================================
# 5. nginx 재시작
# =============================================================================
echo "🌐 nginx를 재시작합니다..."

# nginx 설정 테스트
if sudo nginx -t; then
    echo "✅ nginx 설정 유효"
    
    # nginx 재시작
    sudo systemctl restart nginx
    
    # 상태 확인
    if sudo systemctl is-active --quiet nginx; then
        echo "✅ nginx 재시작 완료"
    else
        echo "❌ nginx 재시작 실패"
        exit 1
    fi
else
    echo "❌ nginx 설정 오류"
    exit 1
fi

echo ""

# =============================================================================
# 6. 포트 확인
# =============================================================================
echo "🔌 포트 상태 확인:"

echo "포트 3000 (프론트엔드):"
if sudo netstat -tlnp | grep -q ":3000 "; then
    echo "✅ 포트 3000 열림"
else
    echo "❌ 포트 3000 닫힘"
fi

echo "포트 443 (HTTPS):"
if sudo netstat -tlnp | grep -q ":443 "; then
    echo "✅ 포트 443 열림"
else
    echo "❌ 포트 443 닫힘"
fi

echo ""

# =============================================================================
# 7. 테스트
# =============================================================================
echo "🧪 연결 테스트:"

echo "localhost:3000 테스트:"
if curl -s http://localhost:3000 > /dev/null; then
    echo "✅ localhost:3000 정상"
else
    echo "❌ localhost:3000 오류"
fi

echo "HTTPS 테스트:"
if curl -s -k https://invenone.it.kr > /dev/null; then
    echo "✅ https://invenone.it.kr 정상"
else
    echo "❌ https://invenone.it.kr 오류"
fi

echo ""

# =============================================================================
# 8. 완료
# =============================================================================
echo "🎉 프론트엔드 문제 해결 완료!"
echo ""
echo "📋 확인 사항:"
echo "   1. 브라우저에서 https://invenone.it.kr 접속"
echo "   2. 브라우저 캐시 삭제 후 재접속 (Ctrl+F5)"
echo "   3. 개발자 도구에서 오류 확인"
echo ""
echo "📊 현재 상태:"
pm2 status

echo ""
echo "✅ 모든 설정이 완료되었습니다!" 